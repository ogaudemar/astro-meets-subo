---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, tags, author, draft, posts } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: 100%; /*calc(100% - 2em)*/
				max-width: 100%;
				margin: 0;
				
				
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 800px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
				
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h2 {
				margin: 0 0 0.5em 0;
				
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			.author {
				margin-bottom: 0.5em;
				font-size: 1.05em;
				color: var(--primary);
				text-align: center;
			}
			.author-name {
				font-weight: bold;
			}

			article {
				padding-top: 10rem;
				background: linear-gradient(var(--dark), var(--secondary-dark));
			}

/* Read more section */

				.read-more-section {
					background: linear-gradient(var(--secondary-dark), var(--dark));
					padding: 3rem 0;

				}
				.read-more-container {
					max-width: 800px;
					margin: 0 auto;
					text-align: center;
				}
				.read-more-title {
					font-size: 2rem;
					font-weight: 700;
					color: var(--accent);
					margin-bottom: 2rem;
				}
				.read-more-list {
					list-style: none;
					display: flex;
					gap: 2rem;
					justify-content: center;
					padding: 0;
					margin: 0;
				}
				.read-more-item {
					background: rgba(255,255,255,0.08);
					border-radius: 1rem;
					padding: 1rem 1.5rem;
					box-shadow: 0 2px 12px rgba(0,0,0,0.08);
					min-width: 180px;
					max-width: 240px;
					text-align: center;
					display: flex;
					flex-direction: column;
					align-items: center;
				}
				.read-more-img img {
					width: 100%;
					max-width: 180px;
					border-radius: 8px;
					margin-bottom: 1rem;
					display: block;
				}
				.read-more-title-text {
					font-size: 1.1rem;
					font-weight: 400;
					color: white;
					margin-bottom: 0.5rem;
				}
				@media (max-width: 600px) {
					.read-more-list {
						flex-direction: column;
						gap: 1rem;
					}
					.read-more-img img {
						display: none;
					}
					.read-more-title-text {
						font-size: 1.2rem;
					}
				}



/* Check global.css for .prose formats
			
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						{author && (
							<div class="author">
								By <span class="author-name">{author}</span>
							</div>
						)}
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<!-- <h1 class="blog-title primary">{title}</h1> -->
						<hr />
					</div>
					<slot />
				</div>
			</article>
			<!-- Read More Section -->
			<section class="read-more-section">
				{(() => {
					// Use the posts prop passed from the page
					const otherPosts = posts
						.filter(post => post.data.title !== title && !post.data.draft);
					// Sort by pubDate descending
					otherPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
					const readMorePosts = otherPosts.slice(0, 3);
					return (
						<div class="read-more-container">
							<h2 class="read-more-title">Read more</h2>
							<ul class="read-more-list">
								{readMorePosts.map(post => (
									<li class="read-more-item">
										<a href={`/blog/${post.id}/`}>
											<span class="read-more-img">
												{post.data.heroImage && <img src={post.data.heroImage} alt="" />}
											</span>
											<span class="read-more-title-text">{post.data.title}</span>
										</a>
									</li>
								))}
							</ul>
						</div>
					);
				})()}
			</section>
			</main>
					<Footer />
	</body>
</html>

