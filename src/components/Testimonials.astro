---
const { translations } = Astro.props;

const testimonialsTitle = translations.testimonialsTitle;
const testimonialsSubTitle = translations.testimonialsSubTitle;
const testimonialsList = translations.testimonialsList;

---

<!-- Testimonials -->
    <section class="testimonial-comp">
      <div class="container text-center">
        <h2 class="testimonials__title heading text-white text-center">
          {testimonialsTitle}
        </h2>
        <p class="subtitle text-white text-center">
          {testimonialsSubTitle}
        </p>
        <!-- Note: Testimonial carousel will be implemented later as requested -->
        <div class="testimonial-slider">
          <div class="slider-bg">
            <div class="slider-track" id="testimonial-track"></div>
          </div>
          <div class="slider-controls">
            <button class="slider-arrow left" aria-label="Previous" id="testimonial-prev">&#8592;</button>
            <div class="slider-indicators" id="testimonial-indicators"></div>
            <button class="slider-arrow right" aria-label="Next" id="testimonial-next">&#8594;</button>
          </div>
        </div>
         <div class="cta__buttons">
                 <a href="/invite" class="button button--accent-bg hero__cta-link" target="_blank" rel="noopener noreferrer" style="display: inline-flex; align-items: center; gap: 0.5em;">
          <span style="display: flex; align-items: center;">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515a.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0a12.64 12.64 0 0 0-.617-1.25a.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057a19.9 19.9 0 0 0 5.993 3.03a.078.078 0 0 0 .084-.028a14.09 14.09 0 0 0 1.226-1.994a.076.076 0 0 0-.041-.106a13.107 13.107 0 0 1-1.872-.892a.077.077 0 0 1-.008-.128a10.2 10.2 0 0 0 .372-.292a.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127a12.299 12.299 0 0 1-1.873.892a.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028a19.839 19.839 0 0 0 6.002-3.03a.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.956-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.955-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.946 2.418-2.157 2.418z"/>
            </svg>
          </span>
          Add to Discord
        </a>
          </div>
      </div>
    </section>


    <style>
      .testimonial-comp { 
        background: linear-gradient(var(--dark), var(--secondary-dark));
        padding: 1rem;
      }

      .testimonials__title {
        padding: 1rem 0;    
      }

      .cta__buttons {
        padding: 2rem auto;
        align-items: end;
      }

      .testimonial-slider {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin: 2rem 0 3rem 0;
        position: relative;
        gap: 0.5rem;
      }

      .slider-bg {      
        padding: 2.5rem 0.5rem 2rem 0.5rem;
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .slider-track {
        width: 100%;
        margin: 0 10px;
        padding: 1.5rem 1.1rem 1.1rem 1.1rem;
        display: flex;
        justify-content: center;
        align-items: stretch;
        max-width: 1020px;
        min-height: 260px;
        overflow: hidden;
        position: relative;
        gap: 0.5rem;
      }

      .slider-arrow {
        background: none;
        border: none;
        color: var(--light);
        font-size: 2rem;
        cursor: pointer;
        padding: 0.5rem 1rem;
        transition: color 0.2s;
        z-index: 2;
        outline: none;
      }

      .slider-arrow:focus {
        color: var(--primary);
        box-shadow: 0 0 0 2px var(--primary);
      }

      .slider-arrow:hover {
        color: var(--primary);
      }

      .slider-indicators {
        display: flex;
        gap: 0.7em;
        justify-content: center;
        align-items: center;
      }

      .slider-indicators .dot {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: #eee;
        transition: background 0.2s, box-shadow 0.2s;
        cursor: pointer;
        box-shadow: 0 1px 4px rgba(0,0,0,0.08);
      }

      .slider-indicators .dot.active {
        background: var(--primary);
        box-shadow: 0 2px 8px rgba(0,0,0,0.12);
      }

      @media (max-width: 900px) {
        .slider-bg {
          padding: 1.2rem 0.2rem 1.2rem 0.2rem;
        }
        .slider-track {
          max-width: 700px;
        }
      }

      @media (max-width: 600px) {
        .slider-bg {
          padding: 0.5rem 0.1rem 0.5rem 0.1rem;
        }
        .slider-track {
          max-width: 340px;
          gap: 0.2rem;
        }
        .testimonial-comp { 
          padding: 1rem 0.1rem;
        }
      }
    </style>

<script type="application/json" id="testimonials-data" set:html={JSON.stringify(testimonialsList)}></script>
<script>

window.addEventListener('DOMContentLoaded', function() {
  // Testimonial data
  const testimonials = JSON.parse(document.getElementById('testimonials-data').textContent);
 

  const track = document.getElementById('testimonial-track');
  const prevBtn = document.getElementById('testimonial-prev');
  const nextBtn = document.getElementById('testimonial-next');
  const indicators = document.getElementById('testimonial-indicators');
  let centerIdx = 0;

  function getVisibleCount() {
    if (window.innerWidth < 600) return 1;
    if (window.innerWidth < 900) return 2;
    return 3;
  }

  function getVisibleIndices(center, total, count) {
    // Returns array of indices for visible cards, looping
    const indices = [];
    for (let i = -Math.floor((count-1)/2); i <= Math.floor(count/2); i++) {
      indices.push((center + i + total) % total);
    }
    return indices;
  }

  function renderCards() {
    track.innerHTML = '';
    const visibleCards = getVisibleCount();
    const indices = getVisibleIndices(centerIdx, testimonials.length, visibleCards);
    indices.forEach((idx, i) => {
      const t = testimonials[idx];
      let cardClass = 'testimonial-card';
      if (visibleCards === 1) cardClass += ' center';
      else if (i === Math.floor(indices.length/2)) cardClass += ' center';
      else cardClass += ' side';
      const card = document.createElement('div');
      card.className = cardClass;
      card.innerHTML = `
        <p>${t.text}</p>
        <div class="testimonial-meta">
          <span class="testimonial-author">${t.author}</span>
          <span class="testimonial-community">${t.role}</span>
          ${t.social ? `<span class="testimonial-social">${t.social}</span>` : ''}
        </div>
      `;
      track.appendChild(card);
    });
  }

  function renderIndicators() {
    indicators.innerHTML = '';
    testimonials.forEach((_, i) => {
      const dot = document.createElement('span');
      dot.className = 'dot' + (i === centerIdx ? ' active' : '');
      dot.addEventListener('click', () => {
        centerIdx = i;
        updateSlider();
      });
      indicators.appendChild(dot);
    });
  }

  function updateSlider() {
    renderCards();
    renderIndicators();
  }

  prevBtn.addEventListener('click', () => {
    centerIdx = (centerIdx - 1 + testimonials.length) % testimonials.length;
    updateSlider();
  });
  nextBtn.addEventListener('click', () => {
    centerIdx = (centerIdx + 1) % testimonials.length;
    updateSlider();
  });

  window.addEventListener('resize', updateSlider);

  updateSlider();
});
</script>
